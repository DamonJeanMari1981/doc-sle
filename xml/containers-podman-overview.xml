<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
    [
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<chapter xml:id="cha-podman-overview" xml:lang="en"
    xmlns="http://docbook.org/ns/docbook" version="5.0"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>&podman; Overview</title>
 <para>
  <link xlink:href="https://podman.io/">Podman</link> stands for Pod Manager
  tool. It is a daemonless container engine for developing, managing, and
  running Open Container Initiative (OCI) containers on a Linux system, and it
  offers a drop-in alternative for &docker;. &podman; is the default container
  runtime in &opensuse; Kubic&mdash;a certified Kubernetes distribution built
  on top of &opensuse;. &podman; can be used to create OCI-compliant container
  images using a Dockerfile and a range of commands identical to &deng;. For
  example, the <literal>podman build</literal> command performs the same task
  as <literal>docker build</literal>. In other words, &podman; provides a
  drop-in replacement for &deng;. In fact, you can switch from &deng; to
  &podman; by creating the <literal>alias docker=podman</literal> alias in your
  preferred shell.
 </para>
 <para>
  Moving from &deng; to &podman; does not require any changes in the
  established workflow. There is no need to rebuild images, you can use
  existing &deng; images, and you can use the exact same commands to build and
  manage images as well as running and controlling containers.
 </para>
 <para>
  &podman; differs from &deng; in two important ways.
 </para>
 <itemizedlist>
  <listitem>
   <para>
    &podman; does not uses a daemon, so the container engine interacts directly
    with image registry, containers, and image storage.
   </para>
   <para>
   As &podman; does not have a daemon, it provides integration with systemd. This makes it possible to control containers via systemd units. You can create these units for existing containers and generate units that can create containers if they do not exist in the system. Moreover, &podman; makes it possible to run systemd inside containers.
   </para>
  </listitem>
  <listitem>
   <para>
    Because &podman; relies on user namespaces, which provide an isolation
    mechanism for Linux processes, it does not require root privileges to
    create and run containers. This means that &podman; can run in the root
    mode as well as in an unpriviledged environment.
   </para>
  </listitem>
 </itemizedlist>
 <sect1 xml:id="cha-podman-install">
  <title>&podman; Installation</title>

  <para>
   To install &podman;, run the <command>sudo zypper in podman</command>. Run
   then <command>podman --version</command> to check whether &podman; has been
   installed successfully.
  </para>

  <para>
   By default, &podman; requires root privileges. To enable rootless mode for the current user, run the following command (replace
   <replaceable>USER</replaceable> with the actual username):
  </para>
<screen>&prompt.user;sudo usermod --add-subuids 200000-201000 --add-subgids
   200000-201000 <replaceable>USER</replaceable></screen>
   <para>
   Log out and log in to apply changes.
   </para>
 </sect1>
</chapter>
