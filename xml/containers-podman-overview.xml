<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
    [
<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<chapter xml:id="cha-podman-overview" xml:lang="en"
    xmlns="http://docbook.org/ns/docbook" version="5.0"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>&podman; Overview</title>
 <para>
  <link xlink:href="https://podman.io/">Podman</link> stands for Pod Manager
  tool. It is a daemonless container engine for developing, managing, and
  running Open Container Initiative (OCI) containers on a Linux system, and it
  offers a drop-in alternative for &docker;. &podman; is the default container
  runtime in &opensuse; Kubic&mdash;a certified Kubernetes distribution built
  on top of &opensuse;. &podman; can be used to create OCI-compliant container
  images using a Dockerfile and a range of commands identical to &deng;. For
  example, the <literal>podman build</literal> command performs the same task
  as <literal>docker build</literal>. In other words, &podman; provides a
  drop-in replacement for &deng;. In fact, you can switch from &deng; to
  &podman; by creating the <literal>alias docker=podman</literal> alias in your
  preferred shell.
 </para>
 <para>
  Moving from &deng; to &podman; does not require any changes in the
  established workflow. There is no need to rebuild images, you can use
  existing &deng; images, and you can use the exact same commands to build and
  manage images as well as running and controlling containers.
 </para>
 <para>
  &podman; differs from &deng; in two important ways.
 </para>
 <itemizedlist>
  <listitem>
   <para>
    &podman; does not uses a daemon, so the container engine interacts directly
    with image registry, containers, and image storage. As &podman; does not
    have a daemon, it provides integration with systemd. This makes it possible
    to control containers via systemd units. You can create these units for
    existing containers and generate units that can create containers if they
    do not exist in the system. Moreover, &podman; makes it possible to run
    systemd inside containers.
   </para>
  </listitem>
  <listitem>
   <para>
    Because &podman; relies on user namespaces, which provide an isolation
    mechanism for Linux processes, it does not require root privileges to
    create and run containers. This means that &podman; can run in the root
    mode as well as in an unpriviledged environment.
   </para>
  </listitem>
 </itemizedlist>
 <sect1 xml:id="cha-podman-install">
  <title>&podman; Installation</title>

  <para>
   To install &podman;, run the <command>sudo zypper in podman</command>. Run
   then <command>podman --version</command> to check whether &podman; has been
   installed successfully.
  </para>

  <para>
   By default, &podman; requires root privileges. To enable rootless mode for
   the current user, run the following command:
  </para>

<screen>&prompt.user; sudo usermod --add-subuids 200000-201000 --add-subgids
   200000-201000 $USER</screen>

  <para>
   Log out and log in to apply changes.
  </para>
 </sect1>
 <sect1 xml:id="cha-podman-use">
  <title>&podman; Basic Usage</title>

  <para>
   Since &podman; is compatible with &deng;, it features the same commands and
   options. For example, the <command>podman pull</command> command pulls
   container images, while the <command>podman build</command> command allows
   you to build images.
  </para>

  <para>
   Similar to &deng;, &podman; can run containers in the interactive mode that
   makes it possible to inspect and work with an image. To run the
   <literal>suse/sle15</literal> in the interactive mode, use the following
   command:
  </para>

<screen>&prompt.user;podman run --rm -ti suse/sle15</screen>

  <sect2 xml:id="cha-podman-build-images">
   <title>Building Images with &podman;</title>
   <para>
    &podman; can build images from a Dockerfile. The <command>podman
    build</command> command behaves exactly as <command>docker build</command>,
    and it accepts the same options.
   </para>
   <para>
    However, &podman;'s companion tool &buildah; provides an alternative way to
    build images. For further information about &buildah;, refer to
    <xref linkend="cha-buildah-overview" />.
   </para>
  </sect2>
 </sect1>
</chapter>
